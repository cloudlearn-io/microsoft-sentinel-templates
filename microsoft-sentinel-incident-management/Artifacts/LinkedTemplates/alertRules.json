{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string"
        },
        "solarigateRuleGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "disabledRuleGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "mlRuleGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',parameters('disabledRuleGuid'))]",
            "apiVersion": "2021-03-01-preview",
            "kind": "Scheduled",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "Sign-ins from IPs that attempt sign-ins to disabled accounts",
                "description": "Identifies IPs with failed attempts to sign in to one or more disabled accounts signed in successfully to another account.\nReferences: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes\n50057 - User account is disabled. The account has been disabled by an administrator.",
                "severity": "Medium",
                "enabled": true,
                "query": "SigninLogs_CL\n    | where ResultType == \"50057\" \n    | where ResultDescription == \"User account is disabled. The account has been disabled by an administrator.\" \n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), disabledAccountLoginAttempts = count(), \n        disabledAccountsTargeted = dcount(UserPrincipalName_s), applicationsTargeted = dcount(AppDisplayName_s), disabledAccountSet = makeset(UserPrincipalName_s), \n        applicationSet = makeset(AppDisplayName_s)\n        by IPAddress, Type\n            | order by disabledAccountLoginAttempts desc\n    | join kind= leftouter (\n        // Consider these IPs suspicious - and alert any related  successful sign-ins\n        SigninLogs_CL\n        | where ResultType == 0\n        | summarize successfulAccountSigninCount = dcount(UserPrincipalName_s), successfulAccountSigninSet = makeset(UserPrincipalName_s, 15) by IPAddress, Type\n        // Assume IPs associated with sign-ins from 100+ distinct user accounts are safe\n        | where successfulAccountSigninCount < 100\n        )\n        on IPAddress \n            | where successfulAccountSigninCount != 0\n    | project StartTime, EndTime, IPAddress, disabledAccountLoginAttempts, disabledAccountsTargeted, disabledAccountSet, applicationSet, \n        successfulAccountSigninCount, successfulAccountSigninSet, Type\n    | order by disabledAccountLoginAttempts\n    | extend timestamp = StartTime, IPCustomEntity = IPAddress",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT30M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess",
                    "Persistence"
                ],
                "alertRuleTemplateName": "500c103a-0319-4d56-8e99-3cec8d860757",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [
                            "IP"
                        ],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IPCustomEntity"
                            }
                        ]
                    }
                ]
            }
        },
        {
          "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
          "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',parameters('mlRuleGuid'))]",
          "apiVersion": "2021-03-01-preview",
          "kind": "Scheduled",
          "location": "[resourceGroup().location]",
          "properties": {
              "displayName": "Malicious Inbox Rule - custom",
              "description": "Detects creation of suspicious inbox rules which attempt to Delete or Junk any warnings about compromised emails sent to users' mailboxes.\n(Custom log version)",
              "severity": "Medium",
              "enabled": true,
              "query": "let Keywords = dynamic([\"helpdesk\", \" alert\", \" suspicious\", \"fake\", \"malicious\", \"phishing\", \"spam\", \"do not click\", \"do not open\", \"hijacked\", \"Fatal\"]);\r\nOfficeActivity_CL\r\n| where Operation_s =~ \"New-InboxRule\"\r\n| where Parameters_s has \"Deleted Items\" or Parameters_s has \"Junk Email\" \r\n| extend Events=todynamic(Parameters_s)\r\n| parse Events  with * \"SubjectContainsWords\" SubjectContainsWords '}'*\r\n| parse Events  with * \"BodyContainsWords\" BodyContainsWords '}'*\r\n| parse Events  with * \"SubjectOrBodyContainsWords\" SubjectOrBodyContainsWords '}'*\r\n| where SubjectContainsWords has_any (Keywords)\r\nor BodyContainsWords has_any (Keywords)\r\nor SubjectOrBodyContainsWords has_any (Keywords)\r\n| extend ClientIPAddress = case( ClientIP_s has \".\", tostring(split(ClientIP_s,\":\")[0]), ClientIP_s has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP_s,\"]\")[0]))), ClientIP_s )\r\n| extend Keyword = iff(isnotempty(SubjectContainsWords), SubjectContainsWords, (iff(isnotempty(BodyContainsWords),BodyContainsWords,SubjectOrBodyContainsWords )))\r\n| extend RuleDetail = case(OfficeObjectId_s contains '/' , tostring(split(OfficeObjectId_s, '/')[-1]) , tostring(split(OfficeObjectId_s, '\\\\')[-1]))\r\n| summarize count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by  Operation_s, UserId__s, ClientIPAddress, ResultStatus_s, Keyword, OriginatingServer_s, OfficeObjectId_s, RuleDetail",
              "queryFrequency": "PT5M",
              "queryPeriod": "PT30M",
              "triggerOperator": "GreaterThan",
              "triggerThreshold": 0,
              "suppressionDuration": "PT5H",
              "suppressionEnabled": false,
              "tactics": [
                  "Persistence",
                  "DefenseEvasion"
              ],
              "alertRuleTemplateName": null,
              "incidentConfiguration": {
                  "createIncident": true,
                  "groupingConfiguration": {
                      "enabled": true,
                      "reopenClosedIncident": false,
                      "lookbackDuration": "PT12H",
                      "matchingMethod": "Selected",
                      "groupByEntities": [
                          "Account"
                      ],
                      "groupByAlertDetails": [],
                      "groupByCustomDetails": []
                  }
              },
              "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
              },
              "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Malicious Inbox Rule, affected user {{UserId__s}}",
                  "alertDescriptionFormat": null,
                  "alertTacticsColumnName": null,
                  "alertSeverityColumnName": null
              },
              "customDetails": null,
              "entityMappings": [
                  {
                      "entityType": "Account",
                      "fieldMappings": [
                          {
                              "identifier": "FullName",
                              "columnName": "UserId__s"
                          }
                      ]
                  }
              ]
          }
        }
    ],
    "outputs": {}
}
